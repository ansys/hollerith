# check spelling, codestyle
name: GitHub CI

# run only on main branch.  This avoids duplicated actions on PRs
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

jobs:
  style:
    name: Pre-commit Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install pre-commit
        run: |
          sudo apt-get -y update
          sudo DEBIAN_FRONTEND=noninteractive apt-get -y install python3-pip
          sudo DEBIAN_FRONTEND=noninteractive apt-get -y install git
          pip install pre-commit

      - uses: actions/checkout@v3
      - name: Run pre-commit
        run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

  main:
    name: Build and Testing
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9']
        #['3.7', '3.8', '3.9', '3.10']
        os: [ubuntu-latest]
        #, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Linux pip cache
        uses: actions/cache@v3
        if: ${{ runner.os == 'Linux' }}
        with:
          path: ~/.cache/pip
          key: Python-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements_*.txt') }}
          restore-keys: |
            Python-${{ runner.os }}-${{ matrix.python-version }}

      - name: Window pip cache
        uses: actions/cache@v3
        if: ${{ runner.os == 'Windows' }}
        with:
          path: ~\AppData\Local\pip\Cache
          key: Python-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements_*.txt') }}
          restore-keys: |
            Python-${{ runner.os }}-${{ matrix.python-version }}

      # Docker layer caching.
      - uses: satackey/action-docker-layer-caching@v0.0.11
        if: runner.os == 'Linux'
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Create linux wheel
        uses: pypa/cibuildwheel@v2.10.2
        env:
            CIBW_SKIP: "",
            CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8"

      - name: Validate wheel
        run: |
          pip install twine
          twine check dist/*

      - name: Install library on Linux
        if: ${{ runner.os == 'Linux' }}
        run: pip install $(echo dist/*)

      - name: Install library on Windows
        if: ${{ runner.os == 'Windows' }}
        run: pip install (get-item .\dist\*.whl)

      - name: Unit testing
        run: |
          pip install -r requirements/requirements_test.txt
          cd tests  # so we're testing the install, not local
          pytest -svx

      - name: Build sdist
        run: python -m build -s

      - name: Check metadata
        run: twine check dist/*

      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: hollerith-${{ runner.os }}-${{ matrix.python-version }}
          path: dist/
          retention-days: 7

  docs:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install library
        run: |
          sudo apt-get -y update
          sudo apt-get -y install python3-pip
          pip install -e .

      - name: Build HTML
        run: |
          pip install -r requirements/requirements_docs.txt
          make -C doc html SPHINXOPTS="-W"

      - name: Build PDF Documentation
        run: |
          sudo apt update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -qy texlive-latex-extra latexmk
          make -C doc latexpdf

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v2
        with:
          name: Documentation-html
          path: doc/build/html
          retention-days: 7

      - name: Upload PDF Documentation
        uses: actions/upload-artifact@v2
        with:
          name: Documentation-pdf
          path: doc/build/latex/*.pdf
          retention-days: 7

  Release:
    if: contains(github.ref, 'refs/tags')
    needs: [main, style, docs]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
      
      - name: List directory structure
        run: ls -R

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-pdf
          path: ~/latex

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-html
          path: ~/html


      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          BRANCH: gh-pages
          FOLDER: ~/html
          CLEAN: true

      # note how we use the PyPI tokens
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m twine upload --skip-existing ./**/*.whl
          python -m twine upload --skip-existing ./**/*.tar.gz

      - name: Release to Github
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.zip
            ./**/*.pdf
